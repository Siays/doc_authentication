"""Change hash and signature to binary

Revision ID: aa74ca2b17d4
Revises: bfa4d7b06114
Create Date: 2025-05-19 14:59:29.076578

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa74ca2b17d4'
down_revision: Union[str, None] = 'bfa4d7b06114'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('credentials', 'hash',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.LargeBinary(),
    #            existing_nullable=False)
    # op.alter_column('credentials', 'signature',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.LargeBinary(),
    #            existing_nullable=False)


    #adjusted
    # hash and signature need explicit USING clause for conversion
    op.drop_column('credentials', 'hash')
    op.drop_column('credentials', 'signature')

    op.add_column('credentials', sa.Column('hash', sa.LargeBinary(), nullable=False))
    op.add_column('credentials', sa.Column('signature', sa.LargeBinary(), nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('credentials', 'signature',
    #            existing_type=sa.LargeBinary(),
    #            type_=sa.VARCHAR(),
    #            existing_nullable=False)
    # op.alter_column('credentials', 'hash',
    #            existing_type=sa.LargeBinary(),
    #            type_=sa.VARCHAR(),
    #            existing_nullable=False)

    #adjusted
    op.drop_column('credentials', 'hash')
    op.drop_column('credentials', 'signature')

    op.add_column('credentials', sa.Column('hash', sa.String(), nullable=False))
    op.add_column('credentials', sa.Column('signature', sa.String(), nullable=False))
    # ### end Alembic commands ###
